/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Color;
import javax.swing.SpinnerNumberModel;
import scopelite.ScopeLite;

/**
 *
 * @author SHOTbyGUN
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        setTitle("Scope settings");
        initComponents();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        colorDialog = new javax.swing.JDialog();
        barColorChooser = new javax.swing.JColorChooser();
        jSplitPane5 = new javax.swing.JSplitPane();
        colorDialogOk = new javax.swing.JButton();
        colorDialogCancel = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        soundDeviceSelection = new javax.swing.JList();
        restartButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jLabel2 = new javax.swing.JLabel();
        barAmount = new javax.swing.JSpinner();
        jSplitPane3 = new javax.swing.JSplitPane();
        jSplitPane4 = new javax.swing.JSplitPane();
        jLabel3 = new javax.swing.JLabel();
        viewBarColor = new javax.swing.JPanel();
        ChangeBarColorButton = new javax.swing.JButton();
        jSplitPane6 = new javax.swing.JSplitPane();
        jLabel4 = new javax.swing.JLabel();
        barFrequencyModifier = new javax.swing.JSpinner();
        jSplitPane7 = new javax.swing.JSplitPane();
        jLabel5 = new javax.swing.JLabel();
        barSensitivity = new javax.swing.JSpinner();
        jSplitPane11 = new javax.swing.JSplitPane();
        jLabel11 = new javax.swing.JLabel();
        barMaxFrequency = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        splitter = new javax.swing.JSplitPane();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lineThickness = new javax.swing.JSpinner();
        jSplitPane8 = new javax.swing.JSplitPane();
        jLabel8 = new javax.swing.JLabel();
        lineAmplify = new javax.swing.JSlider();
        jSplitPane9 = new javax.swing.JSplitPane();
        jLabel9 = new javax.swing.JLabel();
        amplitudeHistory = new javax.swing.JSpinner();
        jPanel4 = new javax.swing.JPanel();
        jSplitPane12 = new javax.swing.JSplitPane();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displaySelection = new javax.swing.JList();
        windowedMode = new javax.swing.JCheckBox();
        jSplitPane10 = new javax.swing.JSplitPane();
        jLabel10 = new javax.swing.JLabel();
        maxFps = new javax.swing.JSpinner();

        colorDialogOk.setText("  OK  ");
        colorDialogOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorDialogOkActionPerformed(evt);
            }
        });
        jSplitPane5.setLeftComponent(colorDialogOk);

        colorDialogCancel.setText("CANCEL");
        colorDialogCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorDialogCancelActionPerformed(evt);
            }
        });
        jSplitPane5.setRightComponent(colorDialogCancel);

        javax.swing.GroupLayout colorDialogLayout = new javax.swing.GroupLayout(colorDialog.getContentPane());
        colorDialog.getContentPane().setLayout(colorDialogLayout);
        colorDialogLayout.setHorizontalGroup(
            colorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(colorDialogLayout.createSequentialGroup()
                .addGap(464, 464, 464)
                .addComponent(jSplitPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(colorDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(barColorChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        colorDialogLayout.setVerticalGroup(
            colorDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(colorDialogLayout.createSequentialGroup()
                .addComponent(barColorChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(getFont());
        jLabel1.setText("  Sound device  ");
        jSplitPane1.setLeftComponent(jLabel1);

        soundDeviceSelection.setFont(getFont());
        soundDeviceSelection.setModel(new javax.swing.AbstractListModel() {
            String[] strings = new String[scopelite.ScopeLite.soundCapturer.mixers.size()];
            {
                for(int i = 0; i < scopelite.ScopeLite.soundCapturer.mixers.size(); i++) {
                    strings[i] = scopelite.ScopeLite.soundCapturer.mixers.get(i).getName();
                };
            }
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        soundDeviceSelection.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        soundDeviceSelection.setSelectedIndex(scopelite.ScopeLite.soundCapturer.currentMixer);
        soundDeviceSelection.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                soundDeviceSelectionValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(soundDeviceSelection);

        jSplitPane1.setRightComponent(jScrollPane1);

        restartButton.setText("  Restart  ");
        restartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(restartButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(restartButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Input", jPanel1);

        jLabel2.setFont(getFont());
        jLabel2.setText("  Bar amount  ");
        jSplitPane2.setLeftComponent(jLabel2);

        barAmount.setFont(getFont());
        barAmount.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        barAmount.setValue(scopelite.ScopeLite.drawer.getBarAmount());
        barAmount.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                barAmountStateChanged(evt);
            }
        });
        jSplitPane2.setRightComponent(barAmount);

        jLabel3.setFont(getFont());
        jLabel3.setText("  Bar color  ");
        jSplitPane4.setLeftComponent(jLabel3);

        viewBarColor.setBackground(scopelite.ScopeLite.drawer.getBarColor());
        viewBarColor.setPreferredSize(new java.awt.Dimension(20, 20));

        javax.swing.GroupLayout viewBarColorLayout = new javax.swing.GroupLayout(viewBarColor);
        viewBarColor.setLayout(viewBarColorLayout);
        viewBarColorLayout.setHorizontalGroup(
            viewBarColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        viewBarColorLayout.setVerticalGroup(
            viewBarColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        jSplitPane4.setRightComponent(viewBarColor);

        jSplitPane3.setLeftComponent(jSplitPane4);

        ChangeBarColorButton.setText("Change");
        ChangeBarColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeBarColorButtonActionPerformed(evt);
            }
        });
        jSplitPane3.setRightComponent(ChangeBarColorButton);

        jLabel4.setFont(getFont());
        jLabel4.setText("  Bar frequency modifier  ");
        jSplitPane6.setLeftComponent(jLabel4);

        barFrequencyModifier.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        barFrequencyModifier.setValue(scopelite.ScopeLite.drawer.getBarFrequencyModifier());
        barFrequencyModifier.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                barFrequencyModifierStateChanged(evt);
            }
        });
        jSplitPane6.setRightComponent(barFrequencyModifier);

        jLabel5.setFont(getFont());
        jLabel5.setText("  Bar insensitivity  ");
        jSplitPane7.setLeftComponent(jLabel5);

        barSensitivity.setModel(new javax.swing.SpinnerNumberModel(Double.valueOf(2.0d), Double.valueOf(0.2d), null, Double.valueOf(0.1d)));
        barSensitivity.setValue(scopelite.ScopeLite.drawer.barSensitivity);
        barSensitivity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                barSensitivityStateChanged(evt);
            }
        });
        jSplitPane7.setRightComponent(barSensitivity);

        jLabel11.setFont(getFont());
        jLabel11.setText("  Bar max frequency  ");
        jSplitPane11.setLeftComponent(jLabel11);

        barMaxFrequency.setFont(getFont());
        barMaxFrequency.setText(Integer.toString(scopelite.ScopeLite.drawer.getMaxBarFreq()));
        jSplitPane11.setRightComponent(barMaxFrequency);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSplitPane2)
                            .addComponent(jSplitPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSplitPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                            .addComponent(jSplitPane7)))
                    .addComponent(jSplitPane11))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jSplitPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSplitPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jSplitPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSplitPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Bars", jPanel2);

        jLabel6.setText("jLabel6");
        splitter.setLeftComponent(jLabel6);

        jLabel7.setFont(getFont());
        jLabel7.setText("  Line thickness  ");
        splitter.setLeftComponent(jLabel7);

        lineThickness.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        lineThickness.setValue(scopelite.ScopeLite.drawer.lineThickness);
        lineThickness.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lineThicknessStateChanged(evt);
            }
        });
        splitter.setRightComponent(lineThickness);

        jLabel8.setFont(getFont());
        jLabel8.setText("  Signal amplify  ");
        jSplitPane8.setLeftComponent(jLabel8);

        lineAmplify.setMaximum(1000);
        lineAmplify.setToolTipText("");
        lineAmplify.setValue(100);
        lineAmplify.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lineAmplifyStateChanged(evt);
            }
        });
        jSplitPane8.setRightComponent(lineAmplify);

        jLabel9.setFont(getFont());
        jLabel9.setText("  Amplitude history ");
        jSplitPane9.setLeftComponent(jLabel9);

        amplitudeHistory.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
        amplitudeHistory.setValue(scopelite.ScopeLite.drawer.samplesPerLongScope);
        amplitudeHistory.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                amplitudeHistoryStateChanged(evt);
            }
        });
        jSplitPane9.setRightComponent(amplitudeHistory);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(splitter, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSplitPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))
                    .addComponent(jSplitPane8))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSplitPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(splitter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Lines", jPanel3);

        jSplitPane12.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jLabel12.setFont(getFont());
        jLabel12.setText("  Fullscreen display  ");
        jSplitPane12.setLeftComponent(jLabel12);

        displaySelection.setFont(getFont());
        displaySelection.setModel(new javax.swing.AbstractListModel() {
            String[] strings = new String[scopelite.ScopeLite.graphicsDeviceList.length];
            {
                for(int i = 0; i < scopelite.ScopeLite.graphicsDeviceList.length; i++) {
                    strings[i] = i + " " + scopelite.ScopeLite.graphicsDeviceList[i].getIDstring();
                };
            }
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        displaySelection.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        displaySelection.setToolTipText("");
        displaySelection.setSelectedIndex(scopelite.ScopeLite.selectedGraphicsDevice);
        displaySelection.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                displaySelectionValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(displaySelection);

        jSplitPane12.setRightComponent(jScrollPane2);

        windowedMode.setSelected(scopelite.ScopeLite.windowedMode);
        windowedMode.setText("Windowed mode");
        windowedMode.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                windowedModeStateChanged(evt);
            }
        });

        jLabel10.setFont(getFont());
        jLabel10.setText("  Max fps  ");
        jSplitPane10.setLeftComponent(jLabel10);

        maxFps.setFont(getFont());
        maxFps.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        maxFps.setValue(scopelite.ScopeLite.maxFps);
        maxFps.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                maxFpsStateChanged(evt);
            }
        });
        jSplitPane10.setRightComponent(maxFps);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(windowedMode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 196, Short.MAX_VALUE)
                        .addComponent(jSplitPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jSplitPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jSplitPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(windowedMode)
                    .addComponent(jSplitPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("Display", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void soundDeviceSelectionValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_soundDeviceSelectionValueChanged
        // TODO add your handling code here:
        scopelite.ScopeLite.soundCapturer.currentMixer = soundDeviceSelection.getSelectedIndex();
        scopelite.ScopeLite.soundCapturer.restart();
    }//GEN-LAST:event_soundDeviceSelectionValueChanged

    private void barAmountStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_barAmountStateChanged
        // TODO add your handling code here:
        scopelite.ScopeLite.drawer.modifyBar(0, 
                ((SpinnerNumberModel)barAmount.getModel()).getNumber().intValue() 
                - scopelite.ScopeLite.drawer.getBarAmount());
        barMaxFrequency.setText(Integer.toString(scopelite.ScopeLite.drawer.getMaxBarFreq()));
    }//GEN-LAST:event_barAmountStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        ScopeLite.scopeLite.gui = null;
    }//GEN-LAST:event_formWindowClosing

    private void ChangeBarColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeBarColorButtonActionPerformed
        // TODO add your handling code here:
        barColorChooser.setColor(scopelite.ScopeLite.drawer.getBarColor());
        colorDialog.pack();
        colorDialog.setVisible(true);
    }//GEN-LAST:event_ChangeBarColorButtonActionPerformed

    private void colorDialogCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorDialogCancelActionPerformed
        // TODO add your handling code here:
        colorDialog.setVisible(false);
    }//GEN-LAST:event_colorDialogCancelActionPerformed

    private void colorDialogOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorDialogOkActionPerformed
        // TODO add your handling code here:
        scopelite.ScopeLite.drawer.setBarColor(barColorChooser.getColor());
        viewBarColor.setBackground(scopelite.ScopeLite.drawer.getBarColor());
        colorDialog.setVisible(false);
    }//GEN-LAST:event_colorDialogOkActionPerformed

    private void barSensitivityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_barSensitivityStateChanged
        // TODO add your handling code here:
        scopelite.ScopeLite.drawer.barSensitivity = ((SpinnerNumberModel)barSensitivity.getModel()).getNumber().doubleValue();
    }//GEN-LAST:event_barSensitivityStateChanged

    private void lineThicknessStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lineThicknessStateChanged
        // TODO add your handling code here:
        scopelite.ScopeLite.drawer.lineThickness = ((SpinnerNumberModel)lineThickness.getModel()).getNumber().intValue();
    }//GEN-LAST:event_lineThicknessStateChanged

    private void lineAmplifyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lineAmplifyStateChanged
        // TODO add your handling code here:
        scopelite.ScopeLite.amplitudeModifierFactor = lineAmplify.getValue() / 100.0f;
    }//GEN-LAST:event_lineAmplifyStateChanged

    private void amplitudeHistoryStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_amplitudeHistoryStateChanged
        // TODO add your handling code here:
        scopelite.ScopeLite.drawer.samplesPerLongScope = ((SpinnerNumberModel)amplitudeHistory.getModel()).getNumber().intValue();
    }//GEN-LAST:event_amplitudeHistoryStateChanged

    private void maxFpsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_maxFpsStateChanged
        // TODO add your handling code here:
        scopelite.ScopeLite.maxFps = ((SpinnerNumberModel)maxFps.getModel()).getNumber().intValue();
    }//GEN-LAST:event_maxFpsStateChanged

    private void barFrequencyModifierStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_barFrequencyModifierStateChanged
        // TODO add your handling code here:
        
        
        scopelite.ScopeLite.drawer.modifyBar(
            ((SpinnerNumberModel)barFrequencyModifier.getModel()).getNumber().intValue()
                - scopelite.ScopeLite.drawer.getBarFrequencyModifier(), 0);
        
        barFrequencyModifier.setValue(scopelite.ScopeLite.drawer.getBarFrequencyModifier());
        
        barMaxFrequency.setText(Integer.toString(scopelite.ScopeLite.drawer.getMaxBarFreq()));
        
    }//GEN-LAST:event_barFrequencyModifierStateChanged

    private void restartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartButtonActionPerformed
        // TODO add your handling code here:
        scopelite.ScopeLite.soundCapturer.restart();
    }//GEN-LAST:event_restartButtonActionPerformed

    private void windowedModeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_windowedModeStateChanged
        // TODO add your handling code here:
        if(windowedMode.getSelectedObjects() == null)
            scopelite.ScopeLite.windowedMode = false;
        else
            scopelite.ScopeLite.windowedMode = true;
    }//GEN-LAST:event_windowedModeStateChanged

    private void displaySelectionValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_displaySelectionValueChanged
        // TODO add your handling code here:
        scopelite.ScopeLite.selectedGraphicsDevice = displaySelection.getSelectedIndex();
    }//GEN-LAST:event_displaySelectionValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChangeBarColorButton;
    private javax.swing.JSpinner amplitudeHistory;
    private javax.swing.JSpinner barAmount;
    private javax.swing.JColorChooser barColorChooser;
    private javax.swing.JSpinner barFrequencyModifier;
    private javax.swing.JLabel barMaxFrequency;
    private javax.swing.JSpinner barSensitivity;
    private javax.swing.JDialog colorDialog;
    private javax.swing.JButton colorDialogCancel;
    private javax.swing.JButton colorDialogOk;
    private javax.swing.JList displaySelection;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane10;
    private javax.swing.JSplitPane jSplitPane11;
    private javax.swing.JSplitPane jSplitPane12;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JSplitPane jSplitPane4;
    private javax.swing.JSplitPane jSplitPane5;
    private javax.swing.JSplitPane jSplitPane6;
    private javax.swing.JSplitPane jSplitPane7;
    private javax.swing.JSplitPane jSplitPane8;
    private javax.swing.JSplitPane jSplitPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JSlider lineAmplify;
    private javax.swing.JSpinner lineThickness;
    private javax.swing.JSpinner maxFps;
    private javax.swing.JButton restartButton;
    private javax.swing.JList soundDeviceSelection;
    private javax.swing.JSplitPane splitter;
    private javax.swing.JPanel viewBarColor;
    private javax.swing.JCheckBox windowedMode;
    // End of variables declaration//GEN-END:variables
}
